Pass Beg
    VShader Beg
        #version 330 core

        layout(location = 0) in vec2 a_v_;
        layout(location = 1) in vec2 a_uv_;

        uniform mat4 uniform_matrix_mvp;

        out V_OUT_ {
            vec2 mUV;
        } v_out_;

        void main()
        {
            v_out_.mUV   = a_uv_;
            gl_Position  = uniform_matrix_mvp * vec4(a_v_, 0, 1);
        }
    VShader End

    FShader Beg
        #version 330 core

        in V_OUT_ {
            vec2 mUV;
        } v_out_;

        uniform vec2      coord_;
        uniform sampler2D texture0;

        out vec4 color_;

        void main()
        {
            vec2 center   = vec2(0.5f, 0.5f);
            vec2 offset   = coord_ - center;

            vec2 distace  = v_out_.mUV - center;
            vec2 direct   = v_out_.mUV - coord_;

            float cos = dot(normalize(offset), normalize(direct));
            vec2 diff = normalize(direct) * length(distace) * cos;
            
            color_ = texture(texture0, v_out_.mUV);
            // color_.x = diff.x;
            // color_.a = 1;
        }
    FShader End
Pass End
