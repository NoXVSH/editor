Pass Beg
    VShader Beg
        #version 330 core

        layout(location = 0) in vec2 a_v_;
        layout(location = 1) in vec2 a_uv_;

        uniform mat4 uniform_matrix_mvp;

        out V_OUT_ {
            vec2 mUV;
        } v_out_;

        void main()
        {
            v_out_.mUV   = a_uv_;
            gl_Position  = uniform_matrix_mvp * vec4(a_v_, 0, 1);
        }
    VShader End

    FShader Beg
        #version 330 core

        in V_OUT_ {
            vec2 mUV;
        } v_out_;

        uniform vec2      target_;
        uniform sampler2D texture0;

        out vec4 color_;

        void main()
        {
            //  鱼眼，周边放大
            // vec2 point = v_out_.mUV;
            // vec2 normal = target_ - point;
            // float scale = length(normal);
            // vec2 diff = normal * scale;
            // color_ = texture(texture0, point + diff);


            //  鱼眼，周边缩小
            // vec2 point = v_out_.mUV;
            // vec2 normal = target_ - point;
            // float scale = 1.0f - length(normal);
            // vec2 diff = normal * scale;
            // color_ = texture(texture0, point + diff);

            //  拖动局部
            // vec2 point = v_out_.mUV;
            // vec2 center = vec2(0.5f, 0.5f);
            // vec2 offset = target_ - center;

            // vec2 dist = point - center;
            // float s = max(0.0f, 0.3f - length(dist));
            // vec2 diff = (target_ - point) * s;
            // color_ = texture(texture0, point + diff);

            vec2 center = vec2(0.5f, 0.5f);
            vec2 offset = target_ - center;

            vec2 normal     = center  - v_out_.mUV;
            vec2 distance   = target_ - v_out_.mUV;
            float s = max(0.0f, 1.0f - length(normal));
            vec2 diff       = s / 1.0f * distance;
            color_ = texture(texture0, v_out_.mUV + diff);
        }
    FShader End
Pass End
