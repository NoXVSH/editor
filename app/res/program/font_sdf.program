Pass Beg
    BlendFunc SrcAlpha OneMinusSrcAlpha
    VShader Beg
        #version 330 core

        layout(location = 0) in vec2 a_v_;
        layout(location = 1) in vec4 a_c_;
        layout(location = 2) in vec2 a_uv_;

        out V_OUT_ {
            vec4 mColor;
            vec2 mUV;
        } v_out_;

        uniform mat4 uniform_matrix_mvp;

        void main()
        {
            v_out_.mColor   = a_c_;
            v_out_.mUV      = a_uv_;
            gl_Position  = uniform_matrix_mvp * vec4(a_v_, 0, 1);
        }
    VShader End

    FShader Beg
        #version 330 core

        in V_OUT_ {
            vec4 mColor;
            vec2 mUV;
        } v_out_;

        uniform sampler2D uniform_texture;

        out vec4 color_;

        void main()
        {
            float u = v_out_.mUV.x;
            float v = v_out_.mUV.y;
            vec2 step = 1.0f / textureSize(uniform_texture, 0);

            float a0 = texture(uniform_texture, vec2(u - step.x, v - step.y)).a;
            float a1 = texture(uniform_texture, vec2(u         , v - step.y)).a;
            float a2 = texture(uniform_texture, vec2(u + step.x, v - step.y)).a;

            float a3 = texture(uniform_texture, vec2(u - step.x, v         )).a;
            float a4 = texture(uniform_texture, vec2(u         , v         )).a;
            float a5 = texture(uniform_texture, vec2(u + step.x, v         )).a;

            float a6 = texture(uniform_texture, vec2(u - step.x, v + step.y)).a;
            float a7 = texture(uniform_texture, vec2(u         , v + step.y)).a;
            float a8 = texture(uniform_texture, vec2(u + step.x, v + step.y)).a;

            float a = (a0 + a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8) / 9.0f * 2-1;

            color_ = texture(uniform_texture, vec2(u         , v         ));

            return;

            if (a > 0.2f)
            {
                color_ = v_out_.mColor;
            }
            else if (a > -0.2f)
            {
                color_ = v_out_.mColor * (0.2 + a);
            }
            else
            {
                color_ = vec4(0);
            }
        }
    FShader End
Pass End
