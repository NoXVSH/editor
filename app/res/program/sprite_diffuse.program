Pass Beg
    VShader Beg
        #version 330 core

        layout(location = 0) in vec2 a_v_;
        layout(location = 1) in vec2 a_uv_;

        uniform mat4 uniform_matrix_mvp;

        out V_OUT_ {
            vec2 mUV;
        } v_out_;

        void main()
        {
            v_out_.mUV   = a_uv_;
            gl_Position  = uniform_matrix_mvp * vec4(a_v_, 0, 1);
        }
    VShader End

    FShader Beg
        #version 330 core

        in V_OUT_ {
            vec2 mUV;
        } v_out_;

        uniform vec4      params_;
        uniform sampler2D texture0;
        uniform sampler2D texture1;

        out vec4 color_;

        void main()
        {
            vec2 origin = vec2(0.5f, 0.5f);
            vec2 offset = v_out_.mUV - origin;
            float scale = length(offset) / 0.7f;

            vec4 color0 = texture(texture0, v_out_.mUV);
            vec4 color1 = texture(texture1, v_out_.mUV);

            float value = color1.r * 0.2f + scale * 0.8f;

            float alpha = smoothstep(0, 0.2f, params_.r - value);

            color_   = color0 * step(value, params_.r);
            color_.a = color0.a * alpha;
        }
    FShader End
Pass End
