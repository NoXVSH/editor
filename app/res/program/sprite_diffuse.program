Pass Beg
    VShader Beg
        #version 330 core

        layout(location = 0) in vec2 a_v_;
        layout(location = 1) in vec2 a_uv_;

        uniform mat4 uniform_matrix_mvp;

        out V_OUT_ {
            vec2 mUV;
        } v_out_;

        void main()
        {
            v_out_.mUV   = a_uv_;
            gl_Position  = uniform_matrix_mvp * vec4(a_v_, 0, 1);
        }
    VShader End

    FShader Beg
        #version 330 core

        in V_OUT_ {
            vec2 mUV;
        } v_out_;

        uniform vec4      params_;
        uniform sampler2D texture0;

        out vec4 color_;

        const vec2 center = vec2(0.5f, 0.5f);

        float calcWeight(vec2 uv, vec4 color)
        {
            float r = color.r;
            float d = length(uv - center);

            float v0 = smoothstep(0.0f, 1.0f, 1.0f - r);
            float v1 = smoothstep(0.0f, 0.7f, 0.7f - d);
            return smoothstep(v0, v1, 0.5f) * color.a;
        }

        void main()
        {
            vec4 color   = texture(texture0, v_out_.mUV);
            float weight = calcWeight(v_out_.mUV, color);

            float show = step(params_.r, weight);
            color_ = color * show;
            
            // color_.r = weight;
            // color_.g = weight;
            // color_.b = weight;
            // color_.a = 1.0f;
        }
    FShader End
Pass End
